name: Hotfix Pipeline

on:
  push:
    branches: [ 'hotfix/*' ]
  workflow_dispatch:
    inputs:
      hotfix_branch:
        description: 'Hotfix branch name'
        required: true
        type: string

env:
  NODE_VERSION: '18.x'

jobs:
  hotfix-validation:
    name: Hotfix Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run critical tests only
        run: |
          npm run lint
          npm run type-check
          npm run build
          npm run test:critical --workspace=@bankim/client
          npm run test:critical --workspace=@bankim/server
        
      - name: Security scan (critical only)
        run: npm audit --audit-level critical

  emergency-deploy:
    name: Emergency Production Deploy
    runs-on: ubuntu-latest
    needs: hotfix-validation
    if: startsWith(github.ref, 'refs/heads/hotfix/')
    environment: 
      name: production-hotfix
      url: http://185.220.207.52:8003
    
    steps:
      - name: Emergency approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: ${{ secrets.EMERGENCY_APPROVERS }}
          minimum-approvals: 1
          issue-title: "ðŸš¨ EMERGENCY HOTFIX: ${{ github.ref_name }}"
          
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Build hotfix
        run: |
          npm ci
          npm run build
          
      - name: Package hotfix artifacts
        run: |
          cd packages/client && tar -czf ../../hotfix-client-${{ github.sha }}.tar.gz .
          cd ../server && tar -czf ../../hotfix-server-${{ github.sha }}.tar.gz .
          cd ../shared && tar -czf ../../hotfix-shared-${{ github.sha }}.tar.gz .
          
      - name: Deploy hotfix to production
        uses: ./.github/actions/ssh-deploy
        with:
          server: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.PROD_SERVER_PASSWORD }}
          environment: production
          client-artifact: hotfix-client-${{ github.sha }}.tar.gz
          server-artifact: hotfix-server-${{ github.sha }}.tar.gz
          shared-artifact: hotfix-shared-${{ github.sha }}.tar.gz
          
      - name: Post-hotfix validation
        run: |
          sleep 30
          curl -f http://${{ secrets.PROD_SERVER_HOST }}:8003/api/health
          
      - name: Merge hotfix to main
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch origin main
          git checkout main
          git merge --no-ff ${{ github.ref_name }}
          git push origin main
          
      - name: Merge hotfix to develop
        run: |
          git fetch origin develop
          git checkout develop
          git merge --no-ff ${{ github.ref_name }}
          git push origin develop
          
      - name: Cleanup hotfix branch
        run: |
          git push origin --delete ${{ github.ref_name }}
          
      - name: Notify emergency deployment
        uses: ./.github/actions/notify
        with:
          message: "ðŸš¨ EMERGENCY HOTFIX DEPLOYED: ${{ github.ref_name }} - ${{ github.sha }}"